# -*- coding: utf-8 -*-
"""Tic_tac_toe_game.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Fzpc7p-zkrM_LtABtrL-cS4JDyczcH5z
"""

import random

# Variables globales para puntuación
puntos_jugador_x = 0
puntos_jugador_o = 0
puntos_cpu = 0
empates = 0
partidas_jugadas = 0

print("¡Bienvenido al juego de Tic Tac Toe!")
print("=" * 40)

while True:
    # Reiniciar tablero para nueva partida
    tablero = [
        [' ', ' ', ' '],
        [' ', ' ', ' '],
        [' ', ' ', ' ']
    ]

    # Combinaciones ganadoras
    combinaciones_ganadoras = [
        # Horizontales
        ((0,0), (0,1), (0,2)),
        ((1,0), (1,1), (1,2)),
        ((2,0), (2,1), (2,2)),
        # Verticales
        ((0,0), (1,0), (2,0)),
        ((0,1), (1,1), (2,1)),
        ((0,2), (1,2), (2,2)),
        # Diagonales
        ((0,0), (1,1), (2,2)),
        ((0,2), (1,1), (2,0))
    ]

    print(f"\n--- Partida {partidas_jugadas + 1} ---")
    print("Puntuación actual:")
    print(f"Jugador X: {puntos_jugador_x} victorias")
    print(f"Jugador O: {puntos_jugador_o} victorias")
    if puntos_cpu > 0:
        print(f"CPU: {puntos_cpu} victorias")
    print(f"Empates: {empates}")
    print("=" * 30)

    print("Las posiciones del tablero son:")
    print("""
    1 | 2 | 3
    --+---+--
    4 | 5 | 6
    --+---+--
    7 | 8 | 9
    """)

    # Selección de modo de juego
    while True:
        modo = input("\nSelecciona el modo de juego:\n1. Dos jugadores\n2. Contra la CPU\nElige (1/2): ")
        if modo in ['1', '2']:
            break
        print("Por favor, elige 1 o 2")

    jugador_actual = 'X'
    game_over = False
    ganador = None

    while not game_over:
        print(f"\nTurno del jugador: {jugador_actual}")

        # Mostrar tablero actual
        print("Tablero actual:")
        print(f" {tablero[0][0]} | {tablero[0][1]} | {tablero[0][2]} ")
        print("---+---+---")
        print(f" {tablero[1][0]} | {tablero[1][1]} | {tablero[1][2]} ")
        print("---+---+---")
        print(f" {tablero[2][0]} | {tablero[2][1]} | {tablero[2][2]} ")

        if modo == '2' and jugador_actual == 'O':
            # Turno de la CPU
            print("La CPU está pensando...")
            movimientos_disponibles = []

            # Buscar posiciones vacías
            for i in range(1, 10):
                fila = (i - 1) // 3
                columna = (i - 1) % 3
                if tablero[fila][columna] == ' ':
                    movimientos_disponibles.append(i)

            if movimientos_disponibles:
                # Elegir movimiento aleatorio
                movimiento = random.choice(movimientos_disponibles)
                fila = (movimiento - 1) // 3
                columna = (movimiento - 1) % 3
                tablero[fila][columna] = 'O'
                print(f"La CPU eligió la posición {movimiento}")
        else:
            # Turno del jugador humano
            while True:
                try:
                    posicion = int(input("Elige una posición (1-9): "))
                    if 1 <= posicion <= 9:
                        fila = (posicion - 1) // 3
                        columna = (posicion - 1) % 3

                        if tablero[fila][columna] == ' ':
                            tablero[fila][columna] = jugador_actual
                            break
                        else:
                            print("Esa posición ya está ocupada. Elige otra.")
                    else:
                        print("Por favor, elige un número entre 1 y 9.")
                except ValueError:
                    print("Por favor, ingresa un número válido.")

        # Verificar si hay ganador
        hay_ganador = False
        for combinacion in combinaciones_ganadoras:
            todas_iguales = True
            for fila, columna in combinacion:
                if tablero[fila][columna] != jugador_actual:
                    todas_iguales = False
                    break
            if todas_iguales:
                hay_ganador = True
                ganador = jugador_actual
                break

        if hay_ganador:
            print("\nTablero final:")
            print(f" {tablero[0][0]} | {tablero[0][1]} | {tablero[0][2]} ")
            print("---+---+---")
            print(f" {tablero[1][0]} | {tablero[1][1]} | {tablero[1][2]} ")
            print("---+---+---")
            print(f" {tablero[2][0]} | {tablero[2][1]} | {tablero[2][2]} ")

            if modo == '2' and jugador_actual == 'O':
                print("\n¡La CPU ha ganado!")
                puntos_cpu += 1
            else:
                print(f"\n¡El jugador {jugador_actual} ha ganado!")
                if jugador_actual == 'X':
                    puntos_jugador_x += 1
                else:
                    puntos_jugador_o += 1
            game_over = True
        else:
            # Verificar si el tablero está lleno (empate)
            tablero_completo = True
            for fila in tablero:
                if ' ' in fila:
                    tablero_completo = False
                    break

            if tablero_completo:
                print("\nTablero final:")
                print(f" {tablero[0][0]} | {tablero[0][1]} | {tablero[0][2]} ")
                print("---+---+---")
                print(f" {tablero[1][0]} | {tablero[1][1]} | {tablero[1][2]} ")
                print("---+---+---")
                print(f" {tablero[2][0]} | {tablero[2][1]} | {tablero[2][2]} ")
                print("\n¡Empate!")
                empates += 1
                game_over = True
            else:
                # Cambiar turno
                jugador_actual = 'O' if jugador_actual == 'X' else 'X'

    partidas_jugadas += 1

    # Mostrar estadísticas actualizadas
    print(f"\n--- Estadísticas después de {partidas_jugadas} partida(s) ---")
    print(f"Jugador X: {puntos_jugador_x} victorias")
    print(f"Jugador O: {puntos_jugador_o} victorias")
    if puntos_cpu > 0:
        print(f"CPU: {puntos_cpu} victorias")
    print(f"Empates: {empates}")

    # Preguntar si quiere seguir jugando
    while True:
        continuar = input("\n¿Quieres jugar otra partida? (s/n): ").lower()
        if continuar in ['s', 'n', 'si', 'no']:
            break
        print("Por favor ingresa 's' para sí o 'n' para no.")

    if continuar == 'n' or continuar == 'no':
        break

# Mensaje final
print("\n" + "=" * 50)
print("¡Gracias por jugar Tic Tac Toe!")
print(f"Resumen final después de {partidas_jugadas} partidas:")
print(f"Jugador X: {puntos_jugador_x} victorias")
print(f"Jugador O: {puntos_jugador_o} victorias")
if puntos_cpu > 0:
    print(f"CPU: {puntos_cpu} victorias")
print(f"Empates: {empates}")

if puntos_jugador_x > puntos_jugador_o and puntos_jugador_x > puntos_cpu:
    print("¡El Jugador X es el gran campeón!")
elif puntos_jugador_o > puntos_jugador_x and puntos_jugador_o > puntos_cpu:
    print("¡El Jugador O es el gran campeón!")
elif puntos_cpu > puntos_jugador_x and puntos_cpu > puntos_jugador_o:
    print("¡La CPU es la gran campeona!")
else:
    print("¡Ha sido una competencia muy reñida!")

print("¡Hasta la próxima!")
print("=" * 50)